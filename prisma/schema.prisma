// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id      Int       @id @default(autoincrement())
  email   String    @unique
  namn    String?
  Project Project[]
}

model Project {
  id                  Int       @id @default(autoincrement())
  title               String
  country             String
  region              String
  currency            String
  image_url           String?
  description         String?
  project_number      String
  organization        String
  location_index_1    String?
  location_index_2    String?
  location_index_3    String?
  location_index_4    String?
  decision_index_1    String?
  decision_index_2    String?
  decision_index_3    String?
  decision_index_4    String?
  start_date          DateTime
  end_date            DateTime?
  first_access_date   DateTime
  last_access_date    DateTime?
  first_delivery_date DateTime
  last_delivery_date  DateTime?

  User   User? @relation(fields: [userId], references: [id])
  userId Int?

  Product Product[]
}

model Product {
  // Todo:
  // Before filling this in,
  // Wait for frontend form design (some fields from before might be deleted)

  id Int @id @default(autoincrement())

  Project   Project? @relation(fields: [projectId], references: [id])
  projectId Int?
}

model Category {
  id   Int    @id @default(autoincrement())
  name String

  FirstSubCategory FirstSubCategory[]
}

model FirstSubCategory {
  id   Int    @id @default(autoincrement())
  name String

  Category   Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?

  SecondSubCategory SecondSubCategory[]
}

model SecondSubCategory {
  id   Int    @id @default(autoincrement())
  name String

  FirstSubCategory   FirstSubCategory? @relation(fields: [firstSubCategoryId], references: [id])
  firstSubCategoryId Int?
}
